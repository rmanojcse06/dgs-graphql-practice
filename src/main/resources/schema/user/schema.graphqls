
directive @upper on FIELD_DEFINITION
directive @lower on FIELD_DEFINITION

interface UserModel @key(fields: "id") {
  id: ID!
  name: String
  email: String
  role: String
}

type AdminUser implements UserModel  @key(fields: "id"){
  id: ID!
  name: String @upper
  email: String @lower
  phoneNumber: String
  role: String!
  seed: Float!
}

type GuestUser implements UserModel  @key(fields: "id"){
  id: ID!
  name: String @upper
  email: String
  role: String
  phoneNumber: String!
}

scalar DateTime

type Post {
  id: ID!
  title: String
  content: String
  addedBy: UserModel!
  createdAt: DateTime!
}

#extend type Post @key(fields: "id") @extends {
#  id: ID! @external
#  reviews: [Review]
#}
#
#type Review {
#  rating: Int
#  createdAt: DateTime!
#}

type Query {
  user(id: ID!): UserModel
  users: [UserModel]
  get_guests: [GuestUser]
  get_admins: [AdminUser]
  posts: [Post]
  posts_before(dateTime: DateTime!): [Post!]!
  post_by_user(userid: ID!): [Post!]!
}

input UserModelInput {
  id: ID!
  name: String
}

type Mutation {
  add_user(name: String!, phoneNumber: String! = "no-phone-number", email: String): UserModel
  add_post(title: String!, content: String!, userInput: UserModelInput!): Post
}

type Subscription {
  userCreated: UserModel
}
